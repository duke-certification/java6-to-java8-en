:java-package: src/org/j6toj8/fileio
:section-java-package: ../../../{java-package}

=== Files with Streams

.Objective
--------------------------------------------------
Find a file by using the PathMatcher interface, and use Java SE 8 I/O improvements, including Files.find(), Files.walk(), and lines() methods
--------------------------------------------------

In this section Java 8 enhancements for finding and reading files will be presented. These are operations that could already be performed with other methods before Java 8. However, with these improvements, you can perform these operations using Streams.

. You can create a _Stream_ to access all files, directories and subdirectories of a `Path`.
+
[source,java,indent=0]
.{java-package}/fileimprovements/Improvements_Walk.java
----
include::{section-java-package}/fileimprovements/Improvements_Walk.java[tag=code]
----
+
.console output
[source,console]
----
Path: /home/rinaldo/files

All files and directories:
/home/rinaldo/files
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/subfolder1
/home/rinaldo/files/subfolder1/subfolder12
/home/rinaldo/files/subfolder1/subfolder12/file122.txt
/home/rinaldo/files/subfolder1/subfolder12/file121.txt
/home/rinaldo/files/subfolder1/file11.txt
/home/rinaldo/files/subfolder1/subfolder11
/home/rinaldo/files/subfolder1/file12.txt
/home/rinaldo/files/subfolder1/file13.txt
/home/rinaldo/files/file2.txt

The first 5 files and directories:
/home/rinaldo/files
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/subfolder1
/home/rinaldo/files/subfolder1/subfolder12
----
+
Note that the created instance is really a `Stream<Path>`, so that you can perform the operations available on any _Stream_, such as the `filter` method.

. There is a version of the `walk` method for setting additional options and limiting the depth of access to subdirectories.
+
[source,java,indent=0]
.{java-package}/fileimprovements/Improvements_WalkDepth.java
----
include::{section-java-package}/fileimprovements/Improvements_WalkDepth.java[tag=code]
----
+
.console output
[source,console]
----
Path: /home/rinaldo/files

Symbolic files and links to the second level:
/home/rinaldo/files
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/subfolder1
/home/rinaldo/files/subfolder1/subfolder12
/home/rinaldo/files/subfolder1/file11.txt
/home/rinaldo/files/subfolder1/subfolder11
/home/rinaldo/files/subfolder1/file12.txt
/home/rinaldo/files/subfolder1/file13.txt
/home/rinaldo/files/file2.txt
----

. You can search for a file using the `find` method and filter by attributes.
+
[source,java,indent=0]
.{java-package}/fileimprovements/Improvements_Find.java
----
include::{section-java-package}/fileimprovements/Improvements_Find.java[tag=code]
----
+
.console output
[source,console]
----
Path: /home/rinaldo/files

All files, skipping directories, up to the second level:
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/subfolder1/file11.txt
/home/rinaldo/files/subfolder1/file12.txt
/home/rinaldo/files/subfolder1/file13.txt
/home/rinaldo/files/file2.txt
----
+
Note that by using `find` the lambda expression has access to `Path` and its attributes, which is an instance of `BasicFileAttributes`, allowing for greater flexibility in searching.

. You can list the contents of a `Path` using the `list` method.
+
[source,java,indent=0]
.{java-package}/fileimprovements/Improvements_List.java
----
include::{section-java-package}/fileimprovements/Improvements_List.java[tag=code]
----
+
.console output
[source,console]
----
Path: /home/rinaldo/files

Directory listing:
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/subfolder1
/home/rinaldo/files/file2.txt

Directory listing, files only:
/home/rinaldo/files/file1.txt
/home/rinaldo/files/file3.txt
/home/rinaldo/files/file2.txt
----
+
Note that `list` has no subdirectory elements.

. You can retrieve all lines of a file as a _Stream_ using the `lines` method.
+
[source,java,indent=0]
.{java-package}/fileimprovements/Improvements_Lines.java
----
include::{section-java-package}/fileimprovements/Improvements_Lines.java[tag=code]
----
+
.console output
[source,console]
----
Path: /home/rinaldo/files/subfolder1/file11.txt

File content:
1
2
3
4
5

File contents greater than 2:
3
4
5
----

.References
****

* Presenting the New Stream Methods
+
Boyarsky, Jeanne; Selikoff, Scott. OCP: Oracle Certified Professional Java SE 8 Programmer II Study Guide (p. 486). Wiley. Kindle Edition.

* https://www.baeldung.com/java-list-directory-files[List Files in a Directory in Java.]

* https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html[Class Files.] Java Plataform SE 7.

****

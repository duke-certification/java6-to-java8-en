:java-package: src/org/j6toj8/collections
:section-java-package: ../../../{java-package}

=== Perform Calculations and Collecting Streams Results

.Objective
--------------------------------------------------
Perform calculations on Java Streams by using count, max, min, average, and sum methods and save results to a collection by using the collect method and Collector class, including the averagingDouble, groupingBy, joining, partitioningBy methods
--------------------------------------------------

. You can get the largest or smallest value, or the number of elements in the collection.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_MaxMinCount.java
----
include::{section-java-package}/calculations/Collections_MaxMinCount.java[tag=code]
----
+
.console output
[source,console]
----
Max: 9
Min: 1
Count: 9
----

. You can take the average of the collection values.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_AveragingDouble.java
----
include::{section-java-package}/calculations/Collections_AveragingDouble.java[tag=code]
----
+
.console output
[source,console]
----
MÃ©dia: 5.0
----

. You can group collection values by a specific rule.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_GroupingBy.java
----
include::{section-java-package}/calculations/Collections_GroupingBy.java[tag=code]
----
+
.console output
[source,console]
----
Map of rest of division by 3: {0=[3, 6, 9], 1=[1, 4, 7], 2=[2, 5, 8]}
----

. You can concatenate the collection values.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_Joining.java
----
include::{section-java-package}/calculations/Collections_Joining.java[tag=code]
----
+
.console output
[source,console]
----
Join values as String: 123456789
----

. You can separate collection values in a map with `true` and `false` keys, according to a lambda function.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_PartitioningBy.java
----
include::{section-java-package}/calculations/Collections_PartitioningBy.java[tag=code]
----
+
.console output
[source,console]
----
Even and odd map: {false=[1, 3, 5, 7, 9], true=[2, 4, 6, 8]}
----

.References
****

* Using Streams
+
Boyarsky, Jeanne; Selikoff, Scott. OCP: Oracle Certified Professional Java SE 8 Programmer II Study Guide (p. 185). Wiley. Kindle Edition.

* https://www.baeldung.com/java-8-streams[The Java 8 Stream API Tutorial.]

****

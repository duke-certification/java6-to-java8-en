:java-package: src/org/j6toj8/collections
:section-java-package: ../../../{java-package}

=== Fazendo cálculos e coletando resultados de Streams

.Objetivo
--------------------------------------------------
Perform calculations on Java Streams by using count, max, min, average, and sum methods and save results to a collection by using the collect method and Collector class, including the averagingDouble, groupingBy, joining, partitioningBy methods
-
Realizar cálculos em Streams usando os métodos count, max, min, average, e sum e salvar resultados em uma coleção usando o método collect e a classe Collector, incluindo os métodos averagingDouble, groupingBy, joining, partitioningBy
--------------------------------------------------

. É possível pegar o maior ou menor valor, ou a quantidade de elementos da coleção.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_MaxMinCount.java
----
include::{section-java-package}/calculations/Collections_MaxMinCount.java[tag=code]
----
+
.Saída no console
[source,console]
----
Max: 9
Min: 1
Count: 9
----

. É possível pegar a média dos valores da coleção.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_AveragingDouble.java
----
include::{section-java-package}/calculations/Collections_AveragingDouble.java[tag=code]
----
+
.Saída no console
[source,console]
----
Média: 5.0
----

. É possível agrupar os valores da coleção por uma regra específica.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_GroupingBy.java
----
include::{section-java-package}/calculations/Collections_GroupingBy.java[tag=code]
----
+
.Saída no console
[source,console]
----
Mapa de resto da divisão por 3: {0=[3, 6, 9], 1=[1, 4, 7], 2=[2, 5, 8]}
----

. É possível concatenar os valores da coleção.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_Joining.java
----
include::{section-java-package}/calculations/Collections_Joining.java[tag=code]
----
+
.Saída no console
[source,console]
----
Junção dos valores como String: 123456789
----

. É possível separar os valores da coleção em um mapa com chaves `true` e `false`, de acordo com uma função lambda.
+
[source,java,indent=0]
.{java-package}/calculations/Collections_PartitioningBy.java
----
include::{section-java-package}/calculations/Collections_PartitioningBy.java[tag=code]
----
+
.Saída no console
[source,console]
----
Mapa de pares e ímpares: {false=[1, 3, 5, 7, 9], true=[2, 4, 6, 8]}
----

****

* Using Streams
+
Boyarsky, Jeanne; Selikoff, Scott. OCP: Oracle Certified Professional Java SE 8 Programmer II Study Guide (p. 185). Wiley. Edição do Kindle. 

* https://www.baeldung.com/java-8-streams[The Java 8 Stream API Tutorial.]

****